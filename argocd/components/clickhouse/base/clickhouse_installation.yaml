apiVersion: "clickhouse.altinity.com/v1"
kind: "ClickHouseInstallation"
metadata:
  name: COMPONENT_NAME
spec: 
  defaults:
    templates:
      serviceTemplate: service-template
  configuration:
    clusters:
      - name: standard
        templates:
          clusterServiceTemplate: cluster-service-template
          dataVolumeClaimTemplate: data-volume-template
          podTemplate: pod-template
        layout:
          shardsCount: 1
          replicasCount: 1
  templates:
    podTemplates:
      - name: pod-template
        generateName: "{chi}-{cluster}-{shard}-{replica}"
        spec:
          topologySpreadConstraints:
          - maxSkew: 1
            topologyKey: topology.gke.io/zone
            whenUnsatisfiable: DoNotSchedule
            labelSelector:
              matchLabels:
                app: COMPONENT_NAME
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 1
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: app
                      operator: In
                      values:
                      - clickhouse
                  topologyKey: "kubernetes.io/hostname"
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: cloud.google.com/gke-nodepool
                        operator: In
                        values:
                          - clickhouse
          containers:
            - name: clickhouse
              image: image-name
              imagePullPolicy: IfNotPresent
              resources:
                limit:
                  cpu: 500m
                  memory: 1Gi
                requests:
                  cpu: 500m
                  memory: 1Gi
    volumeClaimTemplates:
      - name: data-volume-template
        spec:
          storageClassName: COMPONENT_NAME
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
    serviceTemplates:
      - name: service-template
        generateName: "service-{chi}"
        spec:
          ports:
            - name: http
              port: 8123
            - name: tcp
              port: 9000
          type: ClusterIP
          ClusterIP: None
      - name: cluster-service-template
        generateName: "service-{cluster}"
        spec:
          ports:
          - name: http
            port: 8123
          - name: tcp
            port: 9000
          type: ClusterIP
          ClusterIP: None
